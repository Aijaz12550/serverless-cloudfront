service: custom-domain45
plugins:
  - serverless-lambda-edge-pre-existing-cloudfront
  - serverless-cloudfront-plugin
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  cloudFront:
    cachePolicies:
      myCachePolicy:
        MinTTL: 0
        MaxTTL: 0
        DefaultTTL: 0

package:
    individually: true
    patterns:
      - '!excluded-by-default.json'

functions:
  lambda1:
    handler: lambda1/index.hello
    package:
      patterns:
        - '!lambda1/index.js'
      include:
        - 'lambda1/*'
      # exclude:
      #   - 'lambda2/*'
    events:
      
      - http:
          path: /lambda1
          method: GET
          cors: true
  lambda6:
    handler: lambda2/index.hello
    package:
      patterns:
        - '!lambda2/index.js'
      include:
        - 'lambda2/*'
      # exclude:
      #   - 'lambda1/*'
    events:
      - cloudFront:
          stage: dev
          eventType: viewer-request
          origin:
            DomainName: ufucllcidl.execute-api.us-east-1.amazonaws.com
            OriginPath: /dev
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
          cachePolicy:
            name: myCachePolicy
          pathPattern: /lambda2
          behavior:
            
            ViewerProtocolPolicy: https-only
            AllowedMethods:
              - 'GET'
              - 'HEAD'
              # - 'OPTIONS'
              # - 'PUT'
              # - 'PATCH'
              # - 'POST'
              # - 'DELETE'
      - http:
          path: /lambda2
          method: GET
          cors: true

  lambda7:
    handler: lambda2/index.hello
    package:
      patterns:
        - '!lambda2/index.js'
      exclude:
        - 'lambda1/*'
    events:
      - cloudFront:
          stage: dev
          eventType: viewer-request
          origin:
            DomainName: ufucllcidl.execute-api.us-east-1.amazonaws.com
            OriginPath: /dev
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
          cachePolicy:
            name: myCachePolicy
          pathPattern: /lambda7
          behavior:
            
            ViewerProtocolPolicy: https-only
            AllowedMethods:
              - 'GET'
              - 'HEAD'
              # - 'OPTIONS'
              # - 'PUT'
              # - 'PATCH'
              # - 'POST'
              # - 'DELETE'
      - http:
          path: /lambda2
          method: GET
          cors: true
custom:
  cloudfront:
    distributionId: //ID
    behaviors: 
      lambda2:
        lambdaAssociations:
          viewerRequest : lambda6

resources:
  Resources:
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          PriceClass: PriceClass_100
          Aliases:
            - api.tciq.world
          ViewerCertificate:
            AcmCertificateArn: //ARN
            SslSupportMethod: sni-only

      
  
  
   

